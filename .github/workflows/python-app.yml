name: Check and Activate Repository

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-repo-status:
    runs-on: ubuntu-latest
    outputs:
      repo-active: ${{ steps.check.outputs.repo-active }}
    
    steps:
    - name: Check Repository Status
      id: check
      run: |
        # Replace with your actual API call or status check command
        REPO_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${{ secrets.REPO_OWNER }}/${{ secrets.REPO_NAME }}")
        
        if [ "$REPO_STATUS" -eq 200 ]; then
          echo "Repository is active."
          echo "::set-output name=repo-active::true"
        else
          echo "Repository is off."
          echo "::set-output name=repo-active::false"
        fi

  activate-repo:
    needs: check-repo-status
    runs-on: ubuntu-latest
    if: needs.check-repo-status.outputs.repo-active == 'false'
    
    steps:
    - name: Activate Repository
      run: |
        echo "Activating repository..."
        # Replace with your actual activation command
        curl -X POST "https://api.github.com/repos/${{ secrets.REPO_OWNER }}/${{ secrets.REPO_NAME }}/actions/enable" \
          -H "Authorization: token ${{ secrets.TOKEN }}"

  wait-and-trigger:
    needs: activate-repo
    runs-on: ubuntu-latest
    if: needs.activate-repo.result == 'success' || needs.check-repo-status.outputs.repo-active == 'true'
    
    steps:
    - name: Wait for Repository Activation
      id: wait
      run: |
        INTERVAL=10
        TIMEOUT=1800  # 30 minutes
        ELAPSED=0
        REPO_ACTIVE=false

        while [ $ELAPSED -lt $TIMEOUT ]; do
          REPO_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/repos/${{ secrets.REPO_OWNER }}/${{ secrets.REPO_NAME }}")

          if [ "$REPO_STATUS" -eq 200 ]; then
            REPO_ACTIVE=true
            break
          fi

          echo "Repository is still off. Checking again in $INTERVAL seconds."
          sleep $INTERVAL
          ELAPSED=$((ELAPSED + INTERVAL))
        done

        if [ "$REPO_ACTIVE" = true ]; then
          echo "Repository activated."
        else
          echo "Repository did not activate in time."
          exit 1
        fi

    - name: Trigger Workflow
      id: trigger
      if: steps.wait.outcome == 'success'
      run: |
        echo "Triggering workflow..."
        curl -X POST -H "Authorization: token ${{ secrets.TOKEN }}" \
          "https://api.github.com/repos/${{ secrets.REPO_OWNER }}/${{ secrets.REPO_NAME }}/actions/workflows/${{ secrets.WORKFLOW_ID }}/dispatches" \
          -d '{"ref":"main"}'

  close-down:
    needs: [wait-and-trigger]
    runs-on: ubuntu-latest
    if: needs.wait-and-trigger.result == 'success'
    
    steps:
    - name: Close Down
      run: |
        echo "Workflow triggered successfully. Closing down."
